# Limit on upstream connections to php

limit_upstream_zone lel 5m;

# Pool of php servers to use

upstream php {

     	server        172.31.24.210:9000 weight=2;

	least_conn;
	

	limit_upstream_conn limit=4 zone=lel backlog=1600 timeout=180s;
}

# Add header that indicates if upstream cache was hit or miss
add_header X-Cache $upstream_cache_status;

# Map cache status to cache control header
map $skip_cache $cache_control {
        default  'private, max-age=0, no-store';
        0        'public, max-age=2400, s-maxage=2400'; # 40 mins
	2        'public, max-age=240,s-maxage=0'; # 4 mins			
	3	 'public, max-age=240,s-maxage=0'; # 4 mins
	4	 'public, max-age=18000, s-maxage=18000'; # 5 hours 
}
# Map cache status to expires header
map $skip_cache $expires {
	default  0;
	0       1800;   #  30 mins  
	2       1200;   # 20 mins
	3       518400; # 6 days 
}
# don't log status 2xx or 3xx to the access logs
map $status $loggable {
	~^[23] 0;
	default 1;
} 


# https server settings for London Edinburgh London 2017
server {
	# error logging
	error_log syslog:server=unix:/dev/log;

	# http
	listen 80; # only the webservers can send requests over port 80
        # https
        listen 443 ssl http2;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers 'EDH+aRSA+AESGCM:EDH+aRSA+AES:DHE-RSA-AES256-SHA:EECDH+aRSA+AESGCM:EECDH+aRSA+AES:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:RSA+AESGCM:RSA+AES+SHA:DES-CBC3-SHA:-DHE-RSA-AES128-SHA:!aNULL:!eNULL:!LOW:!MD5:!EXP:!PSK:!DSS:!RC4:!SEED:!ECDSA:!ADH:!IDEA';
        ssl_prefer_server_ciphers on;
        ssl_dhparam ssl/dhparam.pem;
        ssl_certificate ssl/lel2017.crt;
        ssl_certificate_key ssl/lel2017.key;

        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        keepalive_timeout 360;

	 # Website domains or _ for all.
        server_name londonedinburghlondon.com *.londonedinburghlondon.com;
        # Path reference.
        root /sites/lel;
        # Default index file
        index index.php;
        # error page, just 
	error_page   404 /error; 
	# Character set
        charset utf-8;

	access_log off;

	# force https-redirects if necessary
    	if ($http_x_forwarded_proto = http) {
        return 301 https://$server_name$request_uri;
	}

        # Convert queries with rider to pretty permalink
        if ($arg_rider) {
	  
          set $terms $arg_rider;
          set $uri_path  "${uri}rider";
          return  301 $uri_path/$terms?action=$arg_action;
       }
        # Convert queries with last_name to pretty permalink
        if ($arg_last_name) {
	  
          set $terms $arg_last_name;
          set $uri_path  "${uri}lastname";
          return  301 $uri_path/$terms?action=$arg_action;
       }


	# Restore real client IP address
	include global/cloudflare.conf;
	real_ip_header CF-Connecting-IP;

	# Clear Headers
	more_clear_headers 'Server';
        more_clear_headers 'X-Powered-By';
	# Set Headers
	more_set_headers 'X-Server: LEL2017';
	more_set_headers 'X-Build: July 2017';
	more_set_headers 'X-Distance: 1,441km';
	more_set_headers 'X-Ascent: 11,128m';
	more_set_headers 'X-Powered-By: Pork Pies';

	# Prevent site appearing in iframes / clickjacking protection
	more_set_headers 'X-Frame-Options: deny';
	# Cross site scripting filters
	more_set_headers 'X-XSS-Protection: 1; mode=block';        
	# MIME Sniffing
	more_set_headers 'X-Content-Type-Options: nosniff';
	# Content Security Policy
	more_set_headers "Content-Security-Policy: script-src 'self' 'unsafe-inline' 'unsafe-eval' *.google-analytics.com *.googleapis.com *.gstatic.com *.google.com code.highcharts.com cdn.ckeditor.com cdnjs.cloudflare.com cdn.datatables.net";	


	# cache
	include global/cache.conf;       
       	
	# Location directives

 
	# SECURITY SECURITY SECURITY
	# Prevent access to hidden directories and files
	location ~* /\. {
		return 403;
	}
	
	# Prevent access to config file
	location ^~ /wp-config.php {
   		return 403;
	}

 	# Prevent access to comments post file
        location ^~ /wp-comments-post.php {
                return 403;
        }

        # Prevent access to load file
        location ^~ /wp-load.php {
                return 403;
        }

        # Prevent access to settings file
        location ^~ /wp-settings.php {
                return 403;
        }

	location ^~ /readme.html {
                return 403;
        }
	location ^~ /license.txt {
                return 403;
        }
	 # Prevent access to wp-admin/includes directory
        location ^~ /wp-admin/includes {
                return 403;
        }
	# Prevent access to my-account
	location ^~ /my-account/ {
		return 301 /login/;
	}
 	# Prevent access to wp-admin/install.php file 
        location ^~ /wp-admin/install.php {
                return 403;
        }

	 # Prevent access to includes directory
        location ^~ /wp-includes/.*\.php$ {
                return 403;
        }
	  # Prevent access to content directory
        location ~* /wp-content/.*\.php$ {
                return 403;
        }
	# prevent access to xmlrpc.php
	location = /xmlrpc.php {
		return 403;
	}


	# prevent access to any files with a .php extension in the uploads directory
	location ~* /(?:uploads|files)/.*\.(html|htm|shtml|php)$ {
		return 403;
	}
	# Prevent access to woocommerce order export files directly
	location ~ ^/wp-content/uploads/wsoe/(.*?)\.csv$ {
	        rewrite / /error;
	}

	location ^~ /api/wp/v2/users {
		return 403;
	}

	location / {
                if ($query_string ~ (author=).*) {
                        set $args "";
                }
                 # Prevent direct access to admin area if not logged in with access
                location ^~ /wp-admin {
                        if ($http_cookie !~* "wordpress_sec_[a-f0-9]") {
                            return 403;
                        }
                }
                try_files $uri $uri/ /index.php$is_args$args;
        }

	#### END OF SECURITY SECURITY SECURITY

        # Purge pages from nginx cache, called when a page or post is updated
         location ~ /purge(/.*) {
            fastcgi_cache_purge WORDPRESS "https$request_method$host$1";
        }

        location = /robots.txt { access_log off; log_not_found off; }

       	# Static file caching
        location ~* \.(ogg|ogv|svg|svgz|eot|otf|woff|woff2|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
                access_log off;
                log_not_found off;
                # Cache for 6 months
                more_set_headers "Cache-Control: max-age=15552000";

        }
	# css and javascript
        location ~* \.(css|js) {
		access_log off;
                # Cache for 28 days
                more_set_headers "Cache-Control: public, max-age=2419200";
        }

      	 
 # rate limiting
                location  /login/ {
                        limit_req zone=twelve burst=2  nodelay;
			try_files $uri $uri/ /index.php?$args;
                }
		location /login.php {
			limit_req zone=twelve burst=2 nodelay ;
			try_files $uri $uri/ /index.php?$args;
		}
	
                location /api/lel/v1/public/ {
                        limit_req zone=sixty burst=1 nodelay ;
			try_files $uri $uri/ /index.php?$args;
                }
              	
# now match php files if we've got this far
	 location ~ \.php$ {

#		access_log logs/access.log main if=$loggable;
		access_log syslog:server=unix:/dev/log main if=$loggable;
	        limit_conn addr 13;

		more_set_headers  'X-Accel-Expires: $expires';
		more_set_headers 'Cache-Control: $cache_control';
		
		fastcgi_ignore_headers Cache-Control Expires Set-Cookie;		
		try_files $uri =404;

                fastcgi_index index.php;
		fastcgi_buffer_size 8k;
		fastcgi_buffers 24 16k;
		fastcgi_read_timeout 180;
                fastcgi_pass php;
                fastcgi_cache_bypass $skip_cache_true;
                fastcgi_no_cache $skip_cache_true;
                fastcgi_cache WORDPRESS;
		fastcgi_cache_valid 0m;
                fastcgi_cache_lock on;
		fastcgi_keep_conn on;
		fastcgi_cache_use_stale updating error timeout invalid_header http_500;
 
                include global/fastcgi.conf;
        }


}


